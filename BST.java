import java.util.LinkedList;
import java.util.Queue;

public class BST {

    static class Node {
        int data;
        Node left;              
        Node right;
        Node(int d) {
            this.data = d;
            this.left = this.right = null;
        }
    }
  
     public static Node insert(Node n, int d) {
        if (n == null) {
            Node temp = new Node(d);
            return temp;
        }
        if (d > n.data) {
            n.right = insert(n.right, d);
        } else if (d < n.data) {
            n.left = insert(n.left, d);
        }
        return n;
    }

    public static void inorder(Node n) {
        if(n == null){
            return;
        }
        System.out.println(n.data);
        inorder(n.left);
        inorder(n.right);
    }

    public static void BFS(Node n) {
        Queue <Node> q = new LinkedList<>();
        q.add(n);

    }

    public static void main(String[] args) {
        Node BST = insert(null, 10);
        insert(BST, 20);
        insert(BST, 5);
        insert(BST, 30);
        insert(BST, 37);
        insert(BST, 40);

        inorder(BST);
    }
}





















































































































































































































































































































































































































































